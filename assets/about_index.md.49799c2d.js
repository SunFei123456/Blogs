import{_ as m,h as b,o as p,c as o,z as e,a,t as n,b as h,G as g,O as _}from"./chunks/framework.cb5c97e4.js";const v={class:"box"},f={__name:"time",setup(c){const s=b();let i=()=>{let l=new Date().getTime(),r=new Date("2023-3-04").getTime(),t=(l-r)/(1e3*60*60*24);return t=Math.floor(t),t},d=()=>new Date().getHours();const u=()=>new Date().getMinutes();return s.value=i(),(l,r)=>(p(),o("div",null,[e("div",v,[a(" 本站已经运行了"),e("span",null,n(s.value),1),a("天"),e("span",null,n(h(d)()),1),a("时 "),e("span",null,n(u()),1),a("分 ")])]))}},C=m(f,[["__scopeId","data-v-4cb93753"]]),y=_('<h1 id="为什么要搭建一个这样的资料库呢" tabindex="-1">为什么要搭建一个这样的资料库呢? <a class="header-anchor" href="#为什么要搭建一个这样的资料库呢" aria-label="Permalink to &quot;为什么要搭建一个这样的资料库呢?&quot;">​</a></h1><h2 id="_1-起初呢-刚开始看见别人搭建的" tabindex="-1">1. 起初呢,刚开始看见别人搭建的<br> <a class="header-anchor" href="#_1-起初呢-刚开始看见别人搭建的" aria-label="Permalink to &quot;1. 起初呢,刚开始看见别人搭建的&lt;br&gt;&quot;">​</a></h2><p style="font-size:14px;margin-left:2rem;">感觉很酷,哈哈哈,当时心里就想:这么牛,我也要学</p><h2 id="_2-后来呢" tabindex="-1">2. 后来呢 <a class="header-anchor" href="#_2-后来呢" aria-label="Permalink to &quot;2. 后来呢&quot;">​</a></h2><p style="font-size:14px;margin-left:2rem;">可是后来,去学uniapp了,也就是去年寒假那段时间,然后慢慢就把这件事抛掷脑后了<br> 直到后来,在本地写的md文件笔记越来越多,而且平时只有打开电脑的时候才可以看到,而且机房的电脑没有md软件<br> 就想起之前看的别人博客了.于是说干就干,在掘金上简单了解之后,就跟着<strong>vitePress官网</strong>开始搭建自己的网站</p><h2 id="_3-为什么我选择vitepress搭建呢" tabindex="-1">3. 为什么我选择vitePress搭建呢? <a class="header-anchor" href="#_3-为什么我选择vitepress搭建呢" aria-label="Permalink to &quot;3. 为什么我选择vitePress搭建呢?&quot;">​</a></h2><ul style="font-size:14px;margin-left:2rem;"><li><strong>上手简单</strong> 官方文档详细 搭建速度快.</li><li><strong>速度快</strong> 打包 编译速度都很快</li><li>支持 <strong>vue单文件</strong> 在md文档引入</li><li>支持 <strong>服务器端渲染（SSR`）</strong>，可以部署到各种平台，如GitHub Pages、Gitee Pages或个人服务器。</li></ul><h2 id="_4-搭建这个网站的初衷" tabindex="-1">4. 搭建这个网站的初衷 <a class="header-anchor" href="#_4-搭建这个网站的初衷" aria-label="Permalink to &quot;4. 搭建这个网站的初衷&quot;">​</a></h2><p style="font-size:14px;margin-left:2rem;">前端开发是一个充满挑战和创造力的领域，它涉及到多种技术和工具，如HTML、CSS、JavaScript、框架、库等。我创建这个网站的目的是为了与大家分享我在前端开发中学习和实践的经验和心得，希望能够帮助大家提高前端开发的技能和效率，也欢迎大家在评论区交流自己的想法和问题。让我们一起学习和进步吧！</p><h2 id="一-本地代码提交github" tabindex="-1">一. 本地代码提交GitHub <a class="header-anchor" href="#一-本地代码提交github" aria-label="Permalink to &quot;一. 本地代码提交GitHub&quot;">​</a></h2><p>要将你本地的代码文件提交到GitHub仓库，需要进行以下步骤：</p><p>在GitHub上创建仓库（Repository）。</p><p>在本地创建一个文件夹，并在该文件夹内初始化Git仓库，即执行以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ git init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将本地的代码文件添加到Git暂存区，即执行以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ git add &lt;文件名&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将已添加到暂存区的代码文件提交到Git本地仓库，即执行以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ git commit -m &quot;提交信息&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中，提交信息是本次提交的说明信息。</p><p>在GitHub上将本地创建的仓库与远程仓库关联起来，即执行以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ git remote add origin &lt;远程仓库的URL&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将本地代码文件推送（push）到GitHub远程仓库中，即执行以下命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ git push -u origin master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中，origin表示远程仓库的别名，master表示本地分支名。</p><p>通过以上步骤，你就可以成功将本地的代码文件提交到GitHub仓库了。</p><h2 id="二-一次性将多个文件添加到暂存区" tabindex="-1">二. 一次性将多个文件添加到暂存区 <a class="header-anchor" href="#二-一次性将多个文件添加到暂存区" aria-label="Permalink to &quot;二. 一次性将多个文件添加到暂存区&quot;">​</a></h2><p>在Git中，可以使用以下命令一次性将多个文件添加到暂存区：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git add &lt;file1&gt; &lt;file2&gt; &lt;file3&gt; ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中，file1、file2、file3 等代表要添加到暂存区的文件名，可以写多个文件名，用空格隔开。也可以使用通配符来添加一批符合条件的文件，例如：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git add *.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个命令将添加当前目录下所有扩展名为 .txt 的文件到暂存区。添加完成后，可以使用 git status 命令来查看哪些文件已经添加到了暂存区。</p><p>需要注意的是，一次性将多个文件添加到暂存区时，如果其中某个文件已经在之前添加到暂存区，那么它不会重复添加，只有没有添加的文件才会被添加到暂存区。</p>',32),k=JSON.parse('{"title":"为什么要搭建一个这样的资料库呢?","description":"","frontmatter":{},"headers":[],"relativePath":"about/index.md","filePath":"about/index.md"}'),x={name:"about/index.md"},q=Object.assign(x,{setup(c){return(s,i)=>(p(),o("div",null,[g(C),y]))}});export{k as __pageData,q as default};
