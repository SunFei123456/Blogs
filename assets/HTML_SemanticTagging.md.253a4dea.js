import{_ as e,o as a,c as i,O as l}from"./chunks/framework.cb5c97e4.js";const p=JSON.parse('{"title":"HTML5 语义化标签","description":"","frontmatter":{},"headers":[],"relativePath":"HTML/SemanticTagging.md","filePath":"HTML/SemanticTagging.md"}'),t={name:"HTML/SemanticTagging.md"},o=l('<h1 id="html5-语义化标签" tabindex="-1">HTML5 语义化标签 <a class="header-anchor" href="#html5-语义化标签" aria-label="Permalink to &quot;HTML5 语义化标签&quot;">​</a></h1><h2 id="_1-语义化的背景" tabindex="-1">1. 语义化的背景： <a class="header-anchor" href="#_1-语义化的背景" aria-label="Permalink to &quot;1. 语义化的背景：&quot;">​</a></h2><p>以前的HTML的结构，基本上就是DIV+CSS。然而，DIV它并没有什么任何的意义，全靠CSS显示页面的样式。 那么近几年呢，开发者提出了HTML结构的语义化，所以W3C就制定出了语义化标签。</p><h2 id="_2-什么是语义化" tabindex="-1">2. 什么是语义化 <a class="header-anchor" href="#_2-什么是语义化" aria-label="Permalink to &quot;2. 什么是语义化&quot;">​</a></h2><p>语义化就是构成HTML结构的标签要有意义。</p><p>比如有这样的标签：</p><ol><li><code>header表示页面头部</code></li><li><code>main表示页面主题</code></li><li><code>footer表示页面底部</code></li></ol><p>那么这些标签构成的HTML结构就是有意义的，也是语义化的。 如果说页面的头部、主体以及底部都用div来表示，那么他就不是一个语义化的HTML结构了。</p><h2 id="_3-怎么知道页面结构是否语义化了呢" tabindex="-1">3. 怎么知道页面结构是否语义化了呢？ <a class="header-anchor" href="#_3-怎么知道页面结构是否语义化了呢" aria-label="Permalink to &quot;3. 怎么知道页面结构是否语义化了呢？&quot;">​</a></h2><p>去掉CSS，看HTML代码的结构，是否清晰，再看页面内容呈现，是否可以正常显示</p><h2 id="_4-为什么要语义化" tabindex="-1">4. 为什么要语义化 <a class="header-anchor" href="#_4-为什么要语义化" aria-label="Permalink to &quot;4. 为什么要语义化&quot;">​</a></h2><ol><li>对于编写代码的人来说，有语义化标签的HTM的结构，<code>更加清晰，方便编写代码</code>；</li><li>对于团队来说，<code>方便团队的开发与维护</code>；</li><li>对于<code>爬虫，有利于SEO</code>；</li><li>对于浏览器，<code>更加方便解析</code>，</li><li>对于用户，假如因为网速的原因导致没有加载CSS，页面也能<code>呈现出良好的结构</code>；</li><li>某些标签属性如alt，title能带来良好的用户体验，还有<code>用好label标签更利于用户交互</code>；</li><li>在特殊终端如<code>视障阅读器中语义化的 HTML 可以呈现良好的结构</code>。</li></ol><h2 id="_5-怎么做才能写出语义化的html呢" tabindex="-1">5. 怎么做才能写出语义化的HTML呢？ <a class="header-anchor" href="#_5-怎么做才能写出语义化的html呢" aria-label="Permalink to &quot;5. 怎么做才能写出语义化的HTML呢？&quot;">​</a></h2><ul><li>少使用/不使用 div 和 span 标签；</li><li>用 p 标签代替 div 标签；</li><li>不使用样式标签，如： b 标签、font 标签；</li><li>强调文本放在 strong 或者 em 标签中，不要用 b 和 i 标签；</li><li>使用表格 table 时，标题要用 caption，表头要用 thead，主体部分用 tbody 包围，尾部用 tfoot 包围；表头用 th，单元格用 td。</li><li>表单域用 filedset 包裹，用 lengend 标签说明表单的用途。</li><li>input 标签通过 id 属性或 for 属性与 label 标签关联。</li><li>html 语义化，css 类名也要语义化。</li></ul>',14),d=[o];function c(r,n,h,s,_,m){return a(),i("div",null,d)}const u=e(t,[["render",c]]);export{p as __pageData,u as default};
