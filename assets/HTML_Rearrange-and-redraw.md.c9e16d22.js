import{_ as e,o as a,c as o,O as r}from"./chunks/framework.cb5c97e4.js";const f=JSON.parse('{"title":"重绘和重排","description":"","frontmatter":{},"headers":[],"relativePath":"HTML/Rearrange-and-redraw.md","filePath":"HTML/Rearrange-and-redraw.md"}'),d={name:"HTML/Rearrange-and-redraw.md"},c=r('<h1 id="重绘和重排" tabindex="-1">重绘和重排 <a class="header-anchor" href="#重绘和重排" aria-label="Permalink to &quot;重绘和重排&quot;">​</a></h1><h3 id="页面渲染的流程-简单来说-初次渲染时会经过以下6步" tabindex="-1">页面渲染的流程， 简单来说，初次渲染时会经过以下6步： <a class="header-anchor" href="#页面渲染的流程-简单来说-初次渲染时会经过以下6步" aria-label="Permalink to &quot;页面渲染的流程， 简单来说，初次渲染时会经过以下6步：&quot;">​</a></h3><ul><li>构建DOM树</li><li>样式计算</li><li>布局定位</li><li>图层分层</li><li>图层绘制</li><li>合成显示</li></ul><p>在CSS属性改变时，重渲染会分为<code>回流</code>、<code>重绘</code>和<code>直接合成</code>三种情况，分别对应从<code>布局定位</code>/<code>图层绘制</code>/<code>合成显示开始</code>，再走一遍上面的流程。</p><p>元素的CSS具体发生什么改变，则决定属于上面哪种情况：</p><p><code>回流（又叫重排）</code>：元素位置、大小发生变化导致其他节点联动，需要重新计算布局；</p><p><code>重绘</code>：修改了一些不影响布局的属性，比如颜色；</p><p><code>直接合成</code>：合成层的transform、opacity修改，只需要将多个图层再次合并，而后生成位图，最终展示到屏幕上；</p>',8),t=[c];function i(n,l,_,s,p,h){return a(),o("div",null,t)}const u=e(d,[["render",i]]);export{f as __pageData,u as default};
